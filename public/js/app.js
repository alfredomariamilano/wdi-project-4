'use strict';angular.module('discovereel',['ui.router','ngSanitize','ngResource','angular-jwt','ngMessages','contenteditable','angularMoment','720kb.socialshare']);
'use strict';angular.module('discovereel').constant('API','http://localhost:3000/api');// .constant("API", `https://watchedornot-api.herokuapp.com/api`);
'use strict';angular.module('discovereel').factory('AuthInterceptor',AuthInterceptor);AuthInterceptor.$inject=['API','TokenService'];function AuthInterceptor(API,TokenService){return{request:function request(config){var token=TokenService.getToken();if(config.url.indexOf(API)===0&&token){config.headers.Authorization='Bearer '+token;}return config;},response:function response(res){if(res.config.url.indexOf(API)===0&&res.data.token){TokenService.setToken(res.data.token);}return res;}};}
'use strict';angular.module('discovereel').service('CurrentUserService',CurrentUserService);CurrentUserService.$inject=['$rootScope','TokenService'];function CurrentUserService($rootScope,TokenService){var currentUser=TokenService.decodeToken();return{user:currentUser,saveUser:function saveUser(user){user.id=user._id?user._id:user.id;currentUser=user;$rootScope.$broadcast('loggedIn');},getUser:function getUser(){return currentUser;},clearUser:function clearUser(){currentUser=null;TokenService.clearToken();$rootScope.$broadcast('loggedOut');}};}
// keep
"use strict";
'use strict';angular.module('discovereel').controller('UsersEditCtrl',UsersEditCtrl);UsersEditCtrl.$inject=['User','$stateParams','$state'];function UsersEditCtrl(User,$stateParams,$state){var vm=this;User.get($stateParams,function(data){vm.user=data.user;});vm.submit=function(){User.update($stateParams,{user:vm.user}).$promise.then(function(data){$state.go('UsersShow',$stateParams);});};}
'use strict';angular.module('discovereel').controller('HomeCtrl',HomeCtrl);HomeCtrl.$inject=['User','CurrentUserService','$state'];function HomeCtrl(User,CurrentUserService,$state){var vm=this;vm.login=function(){User.login(vm.user.login).$promise.then(function(data){var user=data.user?data.user:null;if(user){CurrentUserService.saveUser(user);}});};vm.register=function(){User.register(vm.user.register).$promise.then(function(data){var user=data.user?data.user:null;if(user){CurrentUserService.saveUser(user);}});};if(CurrentUserService.getUser())$state.go('MoviesIndex');}
'use strict';angular.module('discovereel').controller('MoviesIndexCtrl',MoviesIndexCtrl);MoviesIndexCtrl.$inject=['Movie','Viewing','$scope'];function MoviesIndexCtrl(Movie,Viewing,$scope){var vm=this;vm.getMovies=function(){Movie.query().$promise.then(function(data){vm.movies=data;vm.checkViewings($scope.$parent.main.user.watched);vm.checkViewings($scope.$parent.main.user.not_watched);vm.movie=vm.movies[0];});};vm.getMovies();vm.setViewing=function(){Viewing.save(vm.viewing).$promise.then(function(){vm.movies.shift();vm.checkMovies();});};vm.checkMovies=function(){if(vm.movies.length<2){vm.getMovies();}vm.movie=vm.movies[0];};vm.watched=function(user){vm.viewing={watched:true,user_id:user.id,movie_id:vm.movie.id};$scope.$parent.main.user.watched.push({movie:{id:vm.movie.id}});$scope.$parent.main.user.watched.push({movie:{title:vm.movie.title}});vm.setViewing();};vm.notWatched=function(user){vm.viewing={watched:false,user_id:user.id,movie_id:vm.movie.id};$scope.$parent.main.user.not_watched.push({movie:{id:vm.movie.id}});$scope.$parent.main.user.not_watched.push({movie:{title:vm.movie.title}});vm.setViewing();};vm.checkViewings=function(viewing){if(viewing){for(var i=0;i<viewing.length;i++){var elementPos=vm.movies.map(function(x){return x.id;}).indexOf(viewing[i].movie.id);var objectFound=vm.movies[elementPos];if(objectFound){vm.movies.splice(elementPos,1);}}}};var stack,cardElement,throwOutConfidenceElements;var config={throwOutConfidence:function throwOutConfidence(offset,element){return Math.min(Math.abs(offset)/element.offsetWidth/10,1);}};stack=gajus.Swing.Stack(config);cardElement=document.querySelector('.stack main div div img');throwOutConfidenceElements={};window.card=stack.createCard(cardElement);stack.on('dragstart',function(e){// throwOutConfidenceElements.yes = e.target.querySelector('.yes').style;
// throwOutConfidenceElements.no = e.target.querySelector('.no').style;
});stack.on('dragmove',function(e){// throwOutConfidenceElements[e.throwDirection == gajus.Swing.Card.DIRECTION_RIGHT ? 'yes' : 'no'].opacity = e.throwOutConfidence;
console.log('hiiii');vm.swipe=e.throwDirection==gajus.Swing.Card.DIRECTION_RIGHT?'right':'left';if(vm.swipe==='right'){$('.indexImage').css('background-image','url(\'./images/unwatched.png\')');}else if(vm.swipe==='left'){$('.indexImage').css('background-image','url(\'./images/watched.png\')');}});stack.on('dragend',function(e){if(vm.swipe==='right'){vm.notWatched($scope.$parent.main.user);}else if(vm.swipe==='left'){vm.watched($scope.$parent.main.user);}});}
'use strict';angular.module('discovereel').controller('UsersIndexCtrl',UsersIndexCtrl);UsersIndexCtrl.$inject=['User'];function UsersIndexCtrl(User){var vm=this;User.query().$promise.then(function(data){vm.users=data.users;});}
'use strict';angular.module('discovereel').config(SetupInterceptor);SetupInterceptor.$inject=['$httpProvider'];function SetupInterceptor($httpProvider){return $httpProvider.interceptors.push('AuthInterceptor');}
'use strict';angular.module('discovereel').controller('LoginCtrl',LoginCtrl);LoginCtrl.$inject=['User','CurrentUserService'];function LoginCtrl(User,CurrentUserService){var vm=this;vm.login=function(){User.login(vm.user).$promise.then(function(data){var user=data.user?data.user:null;if(user){CurrentUserService.saveUser(user);}});};}
'use strict';angular.module('discovereel').controller('MainCtrl',MainCtrl);MainCtrl.$inject=['$http','$rootScope','CurrentUserService','$state','API','User'];function MainCtrl($http,$rootScope,CurrentUserService,$state,API,User){var vm=this;vm.user=CurrentUserService.getUser();if(vm.user){User.query(vm.user.id).$promise.then(function(data){vm.user.not_watched=data[0].not_watched;vm.user.watched=data[0].watched;});}vm.logout=function(){event.preventDefault();CurrentUserService.clearUser();};$rootScope.$on('loggedIn',function(){vm.user=CurrentUserService.getUser();$state.go('MoviesIndex');});$rootScope.$on('loggedOut',function(){vm.user=null;$state.go('home');});vm.openNav=function(){document.getElementById('mySidenav').style.width='250px';document.body.style.backgroundColor='rgba(0,0,0,0.4)';if(document.getElementById('myDropdown')){document.getElementById('myDropdown').style.backgroundColor='rgba(0,0,0,-0.6)';}};vm.closeNav=function(){document.getElementById('mySidenav').style.width='0';document.body.style.backgroundColor='#FFFFFF';if(document.getElementById('myDropdown')){document.getElementById('myDropdown').style.backgroundColor='#FFFFFF';}};}
'use strict';angular.module('discovereel').factory('Movie',Movie);Movie.$inject=['$resource','API'];function Movie($resource,API){return $resource(API+'/movies/:id',{id:'@_id'},{'query':{method:'GET',isArray:true},'update':{method:'PUT'}});}
// keep
"use strict";
'use strict';angular.module('discovereel').filter('rawHtml',rawHtml);rawHtml.$inject=['$sce'];function rawHtml($sce){return function(val){return $sce.trustAsHtml(val);};}
'use strict';angular.module('discovereel').controller('RegisterCtrl',RegisterCtrl);RegisterCtrl.$inject=['User','CurrentUserService'];function RegisterCtrl(User,CurrentUserService){var vm=this;vm.register=function(){User.register(vm.user).$promise.then(function(data){var user=data.user?data.user:null;if(user){CurrentUserService.saveUser(user);}});};}
'use strict';angular.module('discovereel').config(Router);Router.$inject=['$stateProvider','$locationProvider','$urlRouterProvider'];function Router($stateProvider,$locationProvider,$urlRouterProvider){$locationProvider.html5Mode(true);$stateProvider.state('home',{url:'/',templateUrl:'/js/views/home.html',controller:'HomeCtrl as home'}).state('register',{url:'/register',templateUrl:'/js/views/register.html',controller:'RegisterCtrl as register'}).state('login',{url:'/login',templateUrl:'/js/views/login.html',controller:'LoginCtrl as login'})//movies Router
.state('MoviesIndex',{url:'/movies',templateUrl:'/js/views/movies/index.html',controller:'MoviesIndexCtrl as index'}).state('MoviesNew',{url:'/movies/new',templateUrl:'/js/views/movies/new.html',controller:'MoviesNewCtrl as new'}).state('MoviesShow',{url:'/movies/:id',templateUrl:'/js/views/movies/show.html',controller:'MoviesShowCtrl as show'}).state('MoviesEdit',{url:'/movies/:id/edit',templateUrl:'/js/views/movies/edit.html',controller:'MoviesEditCtrl as edit'})//users Router
.state('UsersIndex',{url:'/users',templateUrl:'/js/views/users/index.html',controller:'UsersIndexCtrl as index'}).state('UsersShow',{url:'/users/:id',templateUrl:'/js/views/users/show.html',controller:'UsersShowCtrl as show'}).state('UsersEdit',{url:'/users/:id/edit',templateUrl:'/js/views/users/edit.html',controller:'UsersEditCtrl as edit'});$urlRouterProvider.otherwise('/');}
'use strict';angular.module('discovereel').controller('UsersShowCtrl',UsersShowCtrl);UsersShowCtrl.$inject=['User','$stateParams','$state','$scope'];function UsersShowCtrl(User,$stateParams,$state,$scope){var vm=this;User.get($stateParams,function(data){vm.user=data;$scope.$parent.main.user=data;});vm.userDelete=function(){User.delete($stateParams).$promise.then(function(data){$state.go('UsersIndex');});};}
'use strict';angular.module('discovereel').controller('MoviesShowCtrl',MoviesShowCtrl);MoviesShowCtrl.$inject=['Movie','Viewing','$stateParams','$state','CurrentUserService','$location','$scope','$sce'];function MoviesShowCtrl(Movie,Viewing,$stateParams,$state,CurrentUserService,$location,$scope,$sce){var vm=this;$scope.trustSrc=function(src){return $sce.trustAsResourceUrl(src);};vm.user=CurrentUserService.getUser();Movie.get($stateParams,function(data){vm.movie=data;console.log(vm.movie);vm.checkViewings($scope.$parent.main.user.not_watched);vm.stars=new Array(Math.floor(parseInt(vm.movie.vote_average)/2));});vm.updateViewings=function(){Viewing.update({id:vm.unwatched.id},{watched:true}).$promise.then(function(data){vm.watched=false;});};vm.checkViewings=function(viewing){vm.watched=false;for(var i=0;i<viewing.length;i++){if(viewing[i].movie.id===vm.movie.id){vm.watched=true;vm.unwatched=viewing[i];}}};var amountScrolled=300;$(window).scroll(function(){if($(window).scrollTop()>amountScrolled){$('div.back-to-top').fadeIn('slow');}else{$('div.back-to-top').fadeOut('slow');}});$('div.back-to-top').click(function(){$('html, body').animate({scrollTop:0},600);return false;});}
'use strict';angular.module('discovereel').service('TokenService',TokenService);TokenService.$inject=['$window','jwtHelper'];function TokenService($window,jwtHelper){var self=this;self.setToken=setToken;self.getToken=getToken;self.decodeToken=decodeToken;self.clearToken=clearToken;function setToken(token){return $window.localStorage.setItem('auth-token',token);}function getToken(){return $window.localStorage.getItem('auth-token');}function decodeToken(){var token=self.getToken();return token?jwtHelper.decodeToken(token):null;}function clearToken(){return $window.localStorage.removeItem('auth-token');}}
'use strict';angular.module('discovereel').factory('User',userFactory);userFactory.$inject=['API','$resource'];function userFactory(API,$resource){return $resource(API+'/users/:id',{id:'@_id'},{'query':{method:'GET',isArray:true},'register':{method:'POST',url:API+'/register'},'login':{method:'POST',url:API+'/login'}});}
'use strict';angular.module('discovereel').factory('Viewing',Viewing);Viewing.$inject=['$resource','API'];function Viewing($resource,API){return $resource(API+'/viewings/:id',{id:'@_id'},{'query':{method:'GET',isArray:true},'update':{method:'PUT'}});}